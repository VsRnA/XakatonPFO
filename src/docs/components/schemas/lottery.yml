CreateLotteryRequest:
  type: object
  required:
    - name
    - startAt
    - endAt
    - amount
  properties:
    file:
      type: string
      format: binary
      description: SVG изображение лотереи
    name:
      type: string
      description: Название лотереи
      example: "Новогодний розыгрыш 2025"
    description:
      type: string
      description: Описание лотереи
      example: "Разыгрываем крутые призы к Новому году"
    startAt:
      type: string
      format: date-time
      description: Дата и время начала лотереи
      example: "2025-12-01T00:00:00Z"
    endAt:
      type: string
      format: date-time
      description: Дата и время окончания лотереи
      example: "2025-12-31T23:59:59Z"
    barrelCount:
      type: number
      description: Общее количество бочек в лотерее
    barrelLimit:
      type: number
      description: Лимит бочек на одного участника
    amount:
      type: integer
      example: 7000000

RegisterInLotteryRequest:
  type: object
  required:
    - file
    - lotteryId
    - barrelsNumber
  properties:
    file:
      type: string
      format: binary
      description: Изображение пользователя (JPEG, PNG, GIF, WebP)
    lotteryId:
      type: integer
      description: ID лотереи для регистрации
      example: 1
    barrelsNumber:
      type: array
      items:
        type: integer
      description: Массив номеров бочек (от 1 до barrelCount)
      example: [5, 12, 23, 45, 67, 88]

Lottery:
  type: object
  properties:
    id:
      type: integer
      example: 1
    name:
      type: string
      example: "Новогодний розыгрыш 2025"
    description:
      type: string
      example: "Разыгрываем крутые призы к Новому году"
    attachmentKey:
      type: string
      description: S3 ключ изображения
      example: "lotteries/1634567890123-a1b2c3d4e5f6.svg"
    startAt:
      type: string
      format: date-time
      example: "2025-12-01T00:00:00Z"
    endAt:
      type: string
      format: date-time
      example: "2025-12-31T23:59:59Z"
    amount:
      type: integer
      example: 7000000
    organizator:
      $ref: '#/OrganizatorInfo'
    metadata:
      $ref: '#/LotteryMetadata'
    status:
      type: string
      enum: [draft, inProgress, finished]
      example: "draft"
    seedHash:
      type: string
      description: SHA-256 хеш от seed для проверки честности
      example: "a3f5e8c2d1b4567890abcdef1234567890abcdef1234567890abcdef12345678"
    drandRound:
      type: integer
      description: Номер раунда drand для получения случайного числа
      example: 12345678
    createdAt:
      type: string
      format: date-time
      example: "2025-10-22T12:00:00.000Z"

LotteryWithImage:
  type: object
  properties:
    id:
      type: integer
      example: 1
    name:
      type: string
      example: "Новогодний розыгрыш 2025"
    description:
      type: string
      example: "Разыгрываем крутые призы к Новому году"
    image:
      $ref: '#/LotteryImage'
    amount:
      type: number
      example: 100000.50
    startAt:
      type: string
      format: date-time
      example: "2025-12-01T00:00:00Z"
    endAt:
      type: string
      format: date-time
      example: "2025-12-31T23:59:59Z"
    organizator:
      $ref: '#/OrganizatorInfo'
    metadata:
      $ref: '#/LotteryMetadata'
    status:
      type: string
      enum: [draft, inProgress, finished]
      example: "draft"
    seedHash:
      type: string
      description: SHA-256 хеш от seed для проверки честности розыгрыша
      example: "a3f5e8c2d1b4567890abcdef1234567890abcdef1234567890abcdef12345678"
    drandRound:
      type: integer
      description: Номер раунда drand для получения случайного числа. Используйте API https://api.drand.sh/{chainHash}/public/{round}
      example: 12345678
    createdAt:
      type: string
      format: date-time
      example: "2025-10-22T12:00:00.000Z"
    updatedAt:
      type: string
      format: date-time
      example: "2025-10-22T12:00:00.000Z"

LotteryImage:
  type: object
  nullable: true
  properties:
    attachmentKey:
      type: string
      description: S3 ключ изображения
      example: "lotteries/1634567890123-a1b2c3d4e5f6.svg"
    url:
      type: string
      description: Подписанный URL для доступа к изображению
      example: "https://bucket.s3.region.amazonaws.com/lotteries/1634567890123-a1b2c3d4e5f6.svg?X-Amz-Algorithm=..."
    expiresIn:
      type: integer
      description: Время действия URL в секундах
      example: 3600

OrganizatorInfo:
  type: object
  properties:
    id:
      type: integer
      example: 1
    email:
      type: string
      example: "admin@example.com"
    firstName:
      type: string
      example: "Иван"
    lastName:
      type: string
      example: "Иванов"

LotteryMetadata:
  type: object
  nullable: true
  properties:
    barrelCount:
      type: integer
      example: 90
    barrelLimit:
      type: integer
      example: 10

# Новая схема для регистрации (реальный response)
LotteryRegistrationResponse:
  type: object
  properties:
    message:
      type: string
      example: "Вы успешно зарегистрированы в лотерее"
    assignment:
      type: object
      properties:
        userId:
          type: integer
          example: 2
        lotteryId:
          type: integer
          example: 2
        entropy:
          type: string
          description: Хеш энтропии пользователя
          example: "d48d7a91c17feac70776cc96112ca2ea178a0e0696dc5667190681d50121d112"
        status:
          type: string
          example: "inProgress"
        registeredAt:
          type: string
          format: date-time
          example: "2025-10-22T22:34:02.426Z"
    lottery:
      type: object
      properties:
        id:
          type: integer
          example: 2
        name:
          type: string
          example: "Тестовая Лотерея"
        startAt:
          type: string
          format: date-time
          example: "2025-10-22T01:31:00.000Z"
        endAt:
          type: string
          format: date-time
          example: "2025-10-23T01:32:00.000Z"

# Новая схема для расчёта победителей (реальный response)
LotteryCalculationResponse:
  type: object
  properties:
    message:
      type: string
      example: "Победители успешно определены"
    lottery:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Новогодний розыгрыш 2025"
        status:
          type: string
          example: "Calculated"
    calculation:
      type: object
      properties:
        secretSeed:
          type: string
          example: "secret123..."
        drandRandomness:
          type: string
          example: "8d969eef..."
        finalSeed:
          type: string
          example: "a1b2c3d4..."
        winningBarrels:
          type: array
          items:
            type: integer
          example: [5, 12, 23, 45, 67, 89]
        totalParticipants:
          type: integer
          example: 150
    winners:
      type: array
      items:
        type: object
        properties:
          userId:
            type: integer
            example: 42
          entropy:
            type: string
            example: "d48d7a91c17feac70776cc96112ca2ea178a0e0696dc5667190681d50121d112"
          playerBarrels:
            type: array
            items:
              type: integer
            example: [5, 12, 23, 45, 67, 88]
          matchCount:
            type: integer
            example: 5
    results:
      type: array
      items:
        type: object
        properties:
          placement:
            type: integer
            nullable: true
            example: 1
          userId:
            type: integer
            example: 42
          matchCount:
            type: integer
            example: 5
          status:
            type: string
            enum: [won, lost]
            example: "won"

UserLotteryResults:
  type: object
  properties:
    lottery:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Новогодний розыгрыш 2025"
        status:
          type: string
          example: "Calculated"
        startAt:
          type: string
          format: date-time
        endAt:
          type: string
          format: date-time
        totalParticipants:
          type: integer
          example: 150
        winnersCount:
          type: integer
          example: 3
        calculatedAt:
          type: string
          format: date-time
    userResult:
      type: object
      properties:
        userId:
          type: integer
          example: 42
        status:
          type: string
          enum: [won, lost]
          example: "won"
        placement:
          type: integer
          nullable: true
          example: 1
        matchCount:
          type: integer
          example: 5
        percentile:
          type: integer
          description: "Процент участников, которых обошел пользователь"
          example: 98
        isWinner:
          type: boolean
          example: true
    barrels:
      type: object
      properties:
        player:
          type: array
          items:
            type: integer
          example: [5, 12, 23, 45, 67, 88]
        winning:
          type: array
          items:
            type: integer
          example: [5, 12, 23, 45, 67, 89]
        matched:
          type: array
          items:
            type: integer
          example: [5, 12, 23, 45, 67]
    verification:
      type: object
      description: "Данные для верификации честности розыгрыша"
      properties:
        entropy:
          type: string
          example: "d48d7a91c17feac70776cc96112ca2ea178a0e0696dc5667190681d50121d112"
        secretSeed:
          type: string
          example: "secret123..."
        drandRandomness:
          type: string
          example: "8d969eef..."
        finalSeed:
          type: string
          example: "a1b2c3d4..."
        seedHash:
          type: string
          example: "hash_of_secret..."
    leaderboard:
      type: array
      description: "Топ-10 участников"
      items:
        type: object
        properties:
          userId:
            type: integer
            example: 42
          placement:
            type: integer
            example: 1
          matchCount:
            type: integer
            example: 5
          status:
            type: string
            enum: [won, lost]
            example: "won"
          isCurrentUser:
            type: boolean
            example: true