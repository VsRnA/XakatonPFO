v1.registration:
  post:
    summary: Регистрация нового пользователя
    description: Создает нового пользователя в системе и возвращает JWT токен для аутентификации
    tags:
      - Authentication
    security: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - firstName
              - lastName
              - password
            properties:
              email:
                type: string
                format: email
                description: Email адрес пользователя
                example: "user@example.com"
              firstName:
                type: string
                description: Имя пользователя
                example: "Иван"
                minLength: 1
                maxLength: 50
              lastName:
                type: string
                description: Фамилия пользователя
                example: "Иванов"
                minLength: 1
                maxLength: 50
              middleName:
                type: string
                description: Отчество пользователя (необязательное поле)
                example: "Иванович"
                maxLength: 50
              password:
                type: string
                format: password
                description: Пароль пользователя (минимум 8 символов)
                example: "SecurePassword123!"
                minLength: 8
    responses:
      201:
        description: Пользователь успешно зарегистрирован
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yml#/AuthResponse'
      400:
        $ref: '../components/responses/errors.yml#/BadRequest'
      409:
        $ref: '../components/responses/errors.yml#/Conflict'
      500:
        $ref: '../components/responses/errors.yml#/InternalError'

v1.login:
  post:
    summary: Вход в систему
    description: Аутентификация пользователя и получение JWT токена
    tags:
      - Authentication
    security: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
                description: Email адрес пользователя
                example: "user@example.com"
              password:
                type: string
                format: password
                description: Пароль пользователя
                example: "SecurePassword123!"
    responses:
      200:
        description: Успешная аутентификация
        content:
          application/json:
            schema:
              $ref: '../components/schemas/user.yml#/AuthResponse'
      400:
        $ref: '../components/responses/errors.yml#/BadRequest'
      401:
        $ref: '../components/responses/errors.yml#/Unauthorized'
      500:
        $ref: '../components/responses/errors.yml#/InternalError'